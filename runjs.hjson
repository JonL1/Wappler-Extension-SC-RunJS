[
  {
    type: 'runjs',
    module : 'runjs',
    action : 'run',
    groupTitle : 'Custom JS',
    groupIcon : 'fab fa-lg fa-js comp-flows',
    title : 'RunJS - @@var(name)@@',
    icon : 'fad fa-lg fa-running comp-flows',
    dataPickObject: true,
    properties : [
      {
        group: 'Options',
        variables: [
          { name: 'name', optionName: 'name', title: 'Name', type: 'text', required: true, defaultValue: 'query', help: 'This will be the name for the output key and the tag used in the expression builder'},
          { name: 'code', optionName: 'code', title: 'Code', type: 'textarea', required: true, defaultValue: '', help: 'Code to run'},
          { name: 'forward_console', optionName: 'forward_console', title: 'Forward console', type: 'checkbox', required: false, initValue: false, defaultValue: false, help: 'If checked the output from console methods in your custom code will be forwarded to the server console. Default: false'},
          { name: 'async_function', optionName: 'async_function', title: 'Async', type: 'checkbox', required: false, initValue: false, defaultValue: false, help: 'If checked you can run asynchronous code. Default: false'},
          { name: 'import_require', optionName: 'import_require', title: 'Use Require', type: 'checkbox', required: false, initValue: false, defaultValue: false, help: 'If checked you can require modules in your code. Warning: modules imported will no longer be sandboxed. Default: false'}
          { name: 'timeout', optionName: 'timeout', title: 'Timeout (ms)', type: 'number', required: false, defaultValue: 30000, help: 'Specifies the number of milliseconds to execute code before terminating execution. If execution is terminated, an Error will be thrown. This value must be a strictly positive integer'}    
        ]
      },
      {
        group: 'Data',
        variables: [
          { name: 'bindings', optionName: 'data', key: 'var', keyValue: 'value', title: '', type: 'grid', defaultValue: {}, serverDataBindings: true,
                columns: [
                    { field: 'var', caption: 'Variable', size: '30%', editable: {type: 'text'}},
                    { field: 'value', caption: 'Value', size: '70%', editable: {type: 'datapicker'}}]},
        ]
      },
      {
        group: 'Output',
        variables: [
          { name: 'output', optionName: 'output', title: 'Output', initValue: true, defaultValue: false, type: 'boolean'},
          { name: 'return_text', type: 'static', help: 'Your code needs to return something (i.e. return "hello")'},
          { name: 'show_errors', optionName: 'show_errors', title: 'Show errors', type: 'checkbox', required: false, initValue: false, defaultValue: false, help: 'Show errors in console. Default: false'},
          { name: 'throw_errors', optionName: 'throw_errors', title: 'Throw errors', type: 'checkbox', required: false, initValue: false, defaultValue: false, help: 'Throw errors. Default: false'}
        ]
      }
    ]
  }
]
